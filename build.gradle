plugins {
    id 'distribution'
    id 'java'
    id 'jacoco'
    id 'io.freefair.lombok' version '6.3.0'
}

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/repositories/releases/')
    }
}

def ENV = System.getenv()

def gitRef = { ->
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'rev-parse', '--quiet', '--revs-only', '--verify', '--short', 'HEAD'
    standardOutput = stdout
  }
  return stdout.toString().trim()
}

group = 'net.ripe.rpki.ta'
version = ENV['RELEASE_VERSION'] ?: gitRef()
description = 'RIPE NCC Trust Anchor'
apply plugin: 'java'

dependencies {
    implementation 'net.ripe.rpki:rpki-commons:1.26'
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation 'org.slf4j:slf4j-api:1.7.33'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.10'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.assertj:assertj-core:3.22.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform {}

    // Coverage with jacoco
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
}

tasks.withType(Tar) {
    compression = Compression.GZIP
}

distributions {
  main {
   distributionBaseName = project.name
    contents {
      into('lib/') {
        from jar
        from configurations.runtimeClasspath
        dirMode = 0755
        fileMode = 0644
      }
      from('src/main/scripts') {
        dirMode = 0755
        fileMode = 0555
      }
    }
  }
}
